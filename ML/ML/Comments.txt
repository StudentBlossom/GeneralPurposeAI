dit is gekopierde comments, deze zullen:
-aantekeningen
-frustraties
-inaccuraat
-dom
-ideen zijn
sommige zullen gaan over problemen die totaal niet relevant zijn want ik heb het op een andere manier gedaan

//input is bytes
//6 bytes
//lets say 8 bytes at max
//long = 8 bytes
//we can remember the input USING BIT MASK
//of 1 byte
// DUS als we werken met 8 inputs 
//moeten we het getal 0000 0101 opzoeken wat X en Z is!!!!!!!!!
//en 0000 0111 is XYZ en dat kunnen we gebruiken om een bitmask te generen voor die operatie
//die voeren we uit op de long die we creeren uit de invoer!!!!
//we moeten wel alle 8 bytes in een long zetten!
//we kunnen dit principe ook toepassen op de x-y
//dan moeten we een long voor alle x-y x-z ff kijken hoe we die doen maar dat kan
//
//WE KUNNEN DAN OOK EEN LONG CREEREN VAN X-Y&Z WANT 
//als we de long van de x nemen en die willen we combineren met
//de z in de invoerlong hebben we 2 longs
//de ene is (in bytemask) 0000 0001 voor Z en 0000 0010 voor x-y
//moeten wel kijken of we die in 2 dictionaries moeten zetten want wat nu als 
//x-y= een y die al gedefinieerd is?

//alleen probleem als een getal 0 is maar dat kunnen we oplossen

//TODO CODE BYTEMASK met parabyte en paralong

//we willen heel veel factoren maken
//DUS we moeten x,y, z x-y, x-z,y-z, xy, xz,yz z x-y, y x-z, x y-z,xyz
//als basis nemen we x,y,z,x-y,x-z,z-y
//daarop moeten we alle gecombineerde variabelen nemen. dus xy,xz,yz
//kunnen we voorkomen dat we xy x-y hebben? geen idee




// array aan dictionaries
// x,y,x-y,xy er is een constante hoveelheid van omgevingsfactoren die altijd hetzellfde is
//elke getal in de array staat voor een van die omgevingsfactoren
//in de dictionariy zoek je de waarde van die factor en daarin staat waarde die onthouden moet worden


            //okay so what if instead of adding up all the options weights 
            //we grab the biggest one and set that as 1 and the rest as divided by that and then we add all those numbers together
            //and we use that number (float) to calculate the random number


                        //gcd(a, b, c) = gcd(a, gcd(b, c)) = gcd(gcd(a, b), c) = gcd(gcd(a, c), b).
            //do need definetly figure this out



                //een int kan gebruikt worden met de eerste int de bytemask is van welke getallen
    //het is 4 bytes de eerste is de bytemask de laatste 2 waarvan eentje de - is en de ander een getal?
    //hoe houden we die uit elkaar? x,y-z en y, x-z?
    //daar kunnen we de tweede byte voor gebruiken?

    //de tweede byte heeft 1 bit die overeenkomt met de eerste byte 
    //1100 0000 en 0100 1000
    //dan weten we dat het de tweede bit de eerste is in de formule van x-y
    //als het staat voor abdce en het 1100 en 0100 weten we dat het b-a is
    //we hebben geen negatieve getallen vanwege bytes DUS we kunnen dit gebruiken
    //de tweede byte weten we dat geen bit 1 is waaar die in de tweedeb yte ook 1 is
    //dus bij 1100 0000 en 0100 1000
    //is het b-a & e is
